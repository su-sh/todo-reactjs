{"version":3,"sources":["assets/logo.png","assets/add.png","constants/commonConstants.js","component/Tabs.js","component/Header.js","component/ListItem.js","component/Container.js","component/SearchTodo.js","component/AddTodoInput.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TABS","HOME","REMAINING","COMPLETED","Tabs","props","setCurrentView","activeTab","react_default","a","createElement","className","onClick","Header","alt","title","src","logo","component_ListItem","ListItem","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateStateContent","e","editedTodoContent","target","value","setState","handleSave","todoItemId","todoItem","id","state","trim","editTodoItem","setEdit","alert","deleteItem","stopPropagation","deleteTodoItem","bool","edit","handleEscEnterPress","key","ListItem_EditTodo","ListItem_TodoItemElement","toggleTodoItemCompleted","Component","EditTodo","onKeyUp","type","defaultValue","content","onChange","TodoItemElement","completedCss","completed","checked","Container","todoList","todoListEl","length","map","SearchTodo","changeSearchString","placeholder","AddTodoInput","todoContent","checkEnterPressed","addTodo","addTodoItem","addImg","App","getTodoProps","getFilteredSearchItem","getItemList","view","Date","now","concat","toConsumableArray","item","objectSpread","filter","isCompleted","returnList","searchString","checkEmptySearch","componentDidUpdate","arrayList","localStorage","setItem","JSON","stringify","componentDidMount","parse","getItem","_this2","includes","component_Header","component_Tabs","component_SearchTodo","component_AddTodoInput","component_Container","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.038c6cae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.07ff0800.png\";","module.exports = __webpack_public_path__ + \"static/media/add.24f43569.png\";","const TABS = {\n  HOME: 'home',\n  REMAINING: 'remaining',\n  COMPLETED: 'completed'\n};\nexport default TABS;\n","import React from 'react';\nimport TABS from '../constants/commonConstants';\n\nconst Tabs = props => {\n  let { setCurrentView, activeTab } = props;\n\n  return (\n    <div className=\"tab-container\">\n      <div\n        className={activeTab === TABS.HOME ? 'tab tab-active' : 'tab'}\n        onClick={() => setCurrentView(TABS.HOME)}\n      >\n        Home\n      </div>\n\n      <div\n        className={activeTab === TABS.REMAINING ? 'tab tab-active' : 'tab'}\n        onClick={() => setCurrentView(TABS.REMAINING)}\n      >\n        Remaining\n      </div>\n\n      <div\n        className={activeTab === TABS.COMPLETED ? 'tab tab-active' : 'tab'}\n        onClick={() => setCurrentView(TABS.COMPLETED)}\n      >\n        Completed\n      </div>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React from 'react';\n\nimport logo from '../assets/logo.png';\n\nconst Header = () => {\n  return (\n    <div className=\"logo_title\">\n      <div className=\"logo\">\n        <h1>\n          <img alt=\"logo\" title=\"Logo\" src={logo} />\n        </h1>\n      </div>\n      <div className=\"title\">TO-DO</div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\n\nimport '../App.css';\n\nclass ListItem extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      edit: false,\n      editedTodoContent: ''\n    };\n  }\n\n  updateStateContent = e => {\n    const editedTodoContent = e.target.value;\n    this.setState({\n      editedTodoContent\n    });\n  };\n\n  handleSave = () => {\n    const todoItemId = this.props.todoItem.id;\n    if (this.state.editedTodoContent.trim() !== '') {\n      this.props.editTodoItem(todoItemId, this.state.editedTodoContent);\n      this.setEdit(false);\n    } else {\n      alert('Please change your todo content. \\nOr press cancel button.');\n    }\n  };\n\n  deleteItem = e => {\n    e.stopPropagation();\n    this.props.deleteTodoItem(this.props.todoItem.id);\n  };\n\n  setEdit = bool => {\n    this.setState({\n      edit: bool\n    });\n  };\n\n  handleEscEnterPress = e => {\n    if (e.key === 'Enter') {\n      this.handleSave();\n    }\n    if (e.key === 'Escape') {\n      this.setEdit(false);\n    }\n  };\n\n  render() {\n    const todoItem = this.props.todoItem;\n\n    if (!this.state.edit) {\n      return (\n        <TodoItemElement\n          todoItem={todoItem}\n          setEdit={this.setEdit}\n          deleteItem={this.deleteItem}\n          toggleTodoItemCompleted={this.props.toggleTodoItemCompleted}\n        />\n      );\n    } else {\n      return (\n        <EditTodo\n          todoItem={todoItem}\n          updateStateContent={this.updateStateContent}\n          handleSave={this.handleSave}\n          setEdit={this.setEdit}\n          handleEscEnterPress={this.handleEscEnterPress}\n        />\n      );\n    }\n  }\n\n}\n\nexport default ListItem;\n\nconst EditTodo = props => {\n  const {\n    todoItem,\n    updateStateContent,\n    handleSave,\n    setEdit,\n    handleEscEnterPress\n  } = props;\n\n  return (\n    <div onKeyUp={handleEscEnterPress}>\n      <div className=\"list-item clearfix\">\n        <div className=\"left edit-list-item\">\n          <input\n            type=\"text\"\n            defaultValue={todoItem.content}\n            onChange={e => updateStateContent(e)}\n          />\n        </div>\n\n        <div className=\"right clearfix edit-cancel\">\n          <div className=\"left\">\n            <button\n              className=\"delete-edit-button\"\n              title=\"Save\"\n              onClick={handleSave}\n            >\n              <i className=\"material-icons\">save</i>\n            </button>\n          </div>\n\n          <div className=\"right\">\n            <button\n              title=\"Cancel\"\n              className=\"delete-edit-button\"\n              onClick={e => {\n                e.stopPropagation();\n                setEdit(false);\n              }}\n            >\n              <i className=\"material-icons\">cancel</i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// TodoItemElement Functional Component\nconst TodoItemElement = props => {\n  const { todoItem, setEdit, deleteItem, toggleTodoItemCompleted } = props;\n\n  const completedCss = todoItem.completed\n    ? 'todoItem todoItem-completed'\n    : 'todoItem';\n\n  return (\n    <div\n      className=\"list-item clearfix\"\n      onClick={() => {\n        toggleTodoItemCompleted(todoItem.id);\n      }}\n    >\n      <input\n        className=\"left\"\n        type=\"checkbox\"\n        onChange={() => {}}\n        checked={todoItem.completed}\n      />\n\n      <div className={completedCss + ' left'}>{todoItem.content}</div>\n\n      <div className={'right clearfix'}>\n        <button\n          className=\"delete-edit-button\"\n          title=\"Edit\"\n          onClick={e => {\n            e.stopPropagation();\n            setEdit(true);\n          }}\n        >\n          <i className=\"material-icons\">edit</i>\n        </button>\n\n        <button\n          className=\"delete-edit-button\"\n          title=\"Delete\"\n          onClick={deleteItem}\n        >\n          <i className=\"material-icons\">delete</i>\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport ListItem from './ListItem';\n\nconst Container = props => {\n  const {\n    todoList,\n    toggleTodoItemCompleted,\n    deleteTodoItem,\n    editTodoItem\n  } = props;\n\n  const todoListEl = todoList.length ? (\n    todoList.map(todoItem => {\n      return (\n        <ListItem\n          key={todoItem.id}\n          todoItem={todoItem}\n          toggleTodoItemCompleted={toggleTodoItemCompleted}\n          deleteTodoItem={deleteTodoItem}\n          editTodoItem={editTodoItem}\n        />\n      );\n    })\n  ) : (\n    <div>No todo item</div>\n  );\n\n  return <div>{todoListEl}</div>;\n};\n\nexport default Container;\n","import React from 'react';\n\nconst SearchTodo = props => {\n  const { changeSearchString } = props;\n\n  return (\n    <div className=\"search-todo\">\n      <input placeholder=\"Search\" onChange={changeSearchString} />\n    </div>\n  );\n};\n\nexport default SearchTodo;\n","import React, { Component } from 'react';\n\nimport '../App.css';\nimport addImg from '../assets/add.png';\n\nclass AddTodoInput extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      todoContent: ''\n    };\n  }\n\n  updateStateContent = e => {\n    const todoContent = e.target.value;\n    this.setState({\n      todoContent\n    });\n  };\n\n  checkEnterPressed = e => {\n    if (e.key === 'Enter') {\n      this.addTodo();\n    }\n  };\n\n  addTodo = () => {\n    if (this.state.todoContent.trim() !== '') {\n      this.props.addTodoItem(this.state.todoContent);\n      this.setState({\n        todoContent: ''\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"add-todo\">\n        <input\n          type=\"text\"\n          placeholder=\"Add TO-DO\"\n          value={this.state.todoContent}\n          onKeyUp={this.checkEnterPressed}\n          onChange={this.updateStateContent}\n        />\n\n        <button onClick={this.addTodo}>\n          <img src={addImg} alt=\"add\" title=\"Add Button\" />\n        </button>\n      </div>\n    );\n  }\n\n}\n\nexport default AddTodoInput;\n","import React, { Component } from 'react';\n\nimport Tabs from './component/Tabs';\nimport Header from './component/Header';\nimport Container from './component/Container';\nimport TABS from './constants/commonConstants';\nimport SearchTodo from './component/SearchTodo';\nimport AddTodoInput from './component/AddTodoInput';\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      todoList: [],\n      activeTab: TABS.HOME,\n      searchString: ''\n    };\n  }\n\n  getTodoProps = () => {\n    let todoList;\n\n    switch (this.state.activeTab) {\n      case TABS.HOME:\n        todoList = this.getFilteredSearchItem(this.state.todoList);\n        break;\n      case TABS.REMAINING:\n        todoList = this.getItemList(false);\n        break;\n      case TABS.COMPLETED:\n        todoList = this.getItemList(true);\n        break;\n      default:\n    }\n\n    return todoList;\n  };\n\n  setCurrentView = view => {\n    this.setState({\n      activeTab: view\n    });\n  };\n\n  addTodoItem = todoContent => {\n    let newId = Date.now();\n\n    const todo = {\n      id: newId,\n      content: todoContent,\n      completed: false\n    };\n\n    const todoList = [todo, ...this.state.todoList];\n    this.setState({ todoList });\n  };\n\n  editTodoItem = (id, content) => {\n    const newTodoList = this.state.todoList.map(item => ({ ...item }));\n\n    const todoList = newTodoList.filter(todoItem => {\n      if (todoItem.id === id) {\n        todoItem.content = content;\n\n        return todoItem;\n      }\n\n      return todoItem;\n    });\n\n    this.setState({ todoList });\n  };\n\n  deleteTodoItem = id => {\n    const newTodoList = this.state.todoList.map(item => ({ ...item }));\n\n    const todoList = newTodoList.filter(todoItem => {\n      if (todoItem.id !== id) {\n        return todoItem;\n      }\n\n      return null;\n    });\n\n    this.setState({ todoList });\n  };\n\n  toggleTodoItemCompleted = id => {\n    const newTodoList = this.state.todoList.map(item => ({ ...item }));\n\n    const todoList = newTodoList.filter(todoItem => {\n      if (todoItem.id === id) {\n        todoItem.completed = !todoItem.completed;\n      }\n\n      return todoItem;\n    });\n\n    this.setState({ todoList });\n  };\n\n  // gets completed or incompleted list of items\n  getItemList = isCompleted => {\n    const todoList = this.state.todoList;\n\n    let returnList = todoList.filter(todoItem => {\n      if (todoItem.completed === isCompleted) {\n        return todoItem;\n      }\n\n      return null;\n    });\n    returnList = this.getFilteredSearchItem(returnList);\n\n    return returnList;\n  };\n\n  changeSearchString = e => {\n    const searchString = e.target.value;\n    this.setState({\n      searchString\n    });\n  };\n\n  checkEmptySearch = () => {\n    const checkString = this.state.searchString.trim();\n\n    return checkString.length === 0;\n  };\n\n  getFilteredSearchItem(todoList) {\n    let returnList = todoList;\n\n    if (!this.checkEmptySearch()) {\n      returnList = todoList.filter(todoItem => {\n        if (todoItem.content.includes(this.state.searchString)) {\n          return todoItem;\n        }\n\n        return null;\n      });\n    }\n\n    return returnList;\n  }\n\n  componentDidUpdate = () => {\n    const arrayList = this.state.todoList;\n\n    localStorage.setItem('todoList', JSON.stringify(arrayList));\n  };\n\n  componentDidMount = () => {\n    const todoList = JSON.parse(localStorage.getItem('todoList'));\n\n    if (todoList !== null) {\n      this.setState({\n        todoList\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div className=\"header_container\">\n          <Header />\n\n          <Tabs\n            setCurrentView={this.setCurrentView}\n            activeTab={this.state.activeTab}\n          />\n\n          <SearchTodo changeSearchString={this.changeSearchString} />\n\n          <AddTodoInput addTodoItem={this.addTodoItem} />\n        </div>\n\n        <div className=\"div_container\">\n          <Container\n            todoList={this.getTodoProps()}\n            toggleTodoItemCompleted={this.toggleTodoItemCompleted}\n            deleteTodoItem={this.deleteTodoItem}\n            editTodoItem={this.editTodoItem}\n          />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}